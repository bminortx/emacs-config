;;;;;;;;;;;;;;;;;;;;
;;; Brandon : This replaces common errors associated with
;;; the Google Style Guide. Super useful when running cpplint
(defun cpplint-code-fix ()
  (interactive)
  (c++-mode)
  (goto-char 1)
  (replace-string "){" ") {")
  (goto-char 1)
  (replace-string " )" ")")
  (goto-char 1)
  (replace-string "( " "(")
  (goto-char 1)
  (replace-string "for("   "for (")
  (goto-char 1)  
  (replace-string "if("    "if (")
  (goto-char 1)
  (replace-string "else{"  "else {")
  (goto-char 1)
  (replace-string "while(" "while (")
  (goto-char 1)
  (replace-string "," ", ")
  (goto-char 1)
  (replace-string ",  " ", ")
  (goto-char 1)
  (replace-string ";" " ; ")
  (goto-char 1)
  (replace-string ";  " "; ")
  (goto-char 1)
  (replace-string "  ;" ";")
  (goto-char 1)
  (replace-string " ;"  ";")
  ;;; Arithmetic
  ;;; I didn't find a good way to replace *, since pointers are everywhere
  (goto-char 1)
  (replace-string "=" " = ")
  (goto-char 1)
  (replace-string "  =" " =")
  (goto-char 1)
  (replace-string "=  " "= ")
  (goto-char 1)
  (replace-string "==" " == ")
  (goto-char 1)
  (replace-string "  ==" " ==")
  (goto-char 1)
  (replace-string "==  " "== ")
  (goto-char 1)
  (replace-string "! =" "!=")
  ;;; The above funked some things up, so we have to fix it.
  (goto-char 1)
  (replace-string "= =" "==")
  (goto-char 1)
  (replace-string "- =" "-=")
  (goto-char 1)
  (replace-string "+ =" "+=")
  (goto-char 1)
  (replace-string "* =" "*=")
  (goto-char 1)
  (replace-string "/ =" "/=")
  (goto-char 1)
  (replace-string "< =" "<=")
  (goto-char 1)
  (replace-string "> =" ">=")
  (goto-char 1)
  (replace-string " //  " " //")
  (goto-char 1)
  (replace-string " //" " // ")
  (goto-char 1)
  (replace-string "// /" "//")
  ;;; This should replace tabs with a space, but I haven't tried it. 
  (goto-char 1)
  (replace-string "^I" " ")
  )

;;;;;;;;;;;;;;;;;;;;

(provide 'my-cpplint-fix)
;;; my-cpplint-fix.el ends here
